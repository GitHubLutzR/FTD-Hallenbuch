<?php 
//session_start();

require_once(__DIR__ . '/config.php');
require_once(__DIR__ . '/include_public.php');
// Debug aktivieren (nur wenn Debug-Flag gesetzt)
if (!empty($hesk_settings['debug'])) {
    ini_set('display_errors', '1');
    ini_set('display_startup_errors', '1');
    ini_set('log_errors', '1');
    ini_set('error_log', sys_get_temp_dir() . '/php_errors.log'); // z.B. /tmp/php_errors.log
    error_reporting(E_ALL);

    // Auf Shutdown pr√ºfen (z.B. f√ºr fatale Fehler)
    register_shutdown_function(function() {
        $err = error_get_last();
        if ($err) {
            error_log('SHUTDOWN ERROR: ' . print_r($err, true));
        }
    });
}
if (isset($_GET['rcsubmit'])) {
    if ($_GET['rcsubmit'] == 1) {
        echo "<p>‚úÖ Eintrag erfolgreich gespeichert!</p>";
    } elseif ($_GET['rcsubmit'] == 2) {
        echo "<p>‚ö†Ô∏è Fehler: Der Eintrag liegt zu weit in der Zukunft und wurde nicht gespeichert.</p>";
    } elseif ($_GET['rcsubmit'] == 3) {
        echo "<p>‚ö†Ô∏è Fehler: Ung√ºltige Eingabe ‚Äì bitte Datum und Uhrzeit pr√ºfen.</p>";
    } else {
        echo "<p>‚ùå Unbekannter Status ‚Äì bitte erneut versuchen.</p>";
    }
}

$conn = get_db_connection();

global $hesk_settings;
#$table = $hesk_settings['db_hb_pfix'] . 'gruppen';
$grtable = $hesk_settings['db_hb_pfix'] . 'gruppen';
$trtable = $hesk_settings['db_hb_pfix'] . 'trainer';

?>
<style>
.form-row {
  display: flex;
  align-items: center;
  margin-bottom: 8px;
}
.form-row label {
  width: 100px;
}
.form-row input[type="date"],
.form-row input[type="time"] {
  width: 140px;
}
.form-row input[type="text"] {
  width: 300px;
}
.form-row input[type="text"][name="vermerk"] {
  width: 200px;
}
.form-row textarea {
  width: 300px;
  height: 60px;
}
.required-star {
  color: red;
  font-size: 1em;
  margin-left: 2px;
  vertical-align: super;
}
.multi-group-list {
  margin: 0 0 8px 0;
  padding: 0;
  list-style: none;
  margin-left: 100px;
}
.multi-group-list li {
  display: inline-block;
  background: #eee;
  border-radius: 4px;
  padding: 2px 8px;
  margin-right: 6px;
  font-size: 0.95em;
}
.multi-group-list button {
  background: #c00;
  color: #fff;
  border: none;
  border-radius: 2px;
  margin-left: 4px;
  cursor: pointer;
  font-size: 0.9em;
  padding: 0 4px;
}
.smal-txt {
  font-size: 0.5em;
  margin-left: 2px;
  vertical-align: super;
}
</style>

<form action="submit.php" method="post" id="hallenbuch-form">
  <div class="form-row">
    <label for="datum">Datum:</label>
    <input type="date" name="datum" id="datum" value="<?= date('Y-m-d') ?>" required>
    <span class="required-star">*</span>
  </div>
  <div class="form-row">
    <label for="von">Von:</label>
    <input type="time" name="von" id="von" required>
    <span class="required-star">*</span>
  </div>
  <div class="form-row">
    <label for="bis">Bis:</label>
    <input type="time" name="bis" id="bis" required>
    <span class="required-star">*</span>
  </div>
  <div class="form-row">
    <label for="Gruppe">Gruppen:</label>
    <select id="GruppeSelect">
      <option value="">Bitte w√§hlen</option>
      <?php
      $safe_grtable = preg_replace('/[^A-Za-z0-9_]/', '', $grtable);
      $query_gr = "SELECT id, name FROM `{$safe_grtable}` ORDER BY name = 'sonstige' DESC, name ASC";
      $grresult = mysqli_query($conn, $query_gr);
      if ($grresult === false) {
          echo "<option value=''>Fehler beim Laden der Gruppen</option>";
          echo "<!-- QUERY ERROR: " . htmlspecialchars(mysqli_error($conn), ENT_QUOTES, 'UTF-8') . " -->";
      } else {
          while ($row = mysqli_fetch_assoc($grresult)) {
              $id = (int) $row['id'];
              $name = htmlspecialchars($row['name'], ENT_QUOTES, 'UTF-8');
              echo "<option value=\"$id\">$name</option>";
          }
      }
      ?>
    </select>
    <button type="button" id="addGruppe">‚ûï Hinzuf√ºgen</button>
    <button type="button" id="clearGruppe">üóëÔ∏è Leeren</button>
    <span class="required-star">*</span>
    <span class="smal-txt">&nbsp;&nbsp;&nbsp; max. 2 Gruppen</span>
  </div>

  <div class="form-row" id="gruppe-sonstige-row" style="display:none;">
    <label for="gruppe_sonstige">Bitte Gruppe angeben:</label>
    <input type="text" name="gruppe_sonstige" id="gruppe_sonstige" maxlength="100">
    <span class="required-star">*</span>
  </div>

  <ul class="multi-group-list" id="GruppeList"></ul>
  <div id="GruppeHint" style="margin-left:100px; color:#888; font-size:0.95em;">Bitte mindestens eine Gruppe ausw√§hlen und auf ‚ûï Hinzuf√ºgen klicken.</div>

  <!-- Hidden-Feld enth√§lt die IDs (z.B. "3/5") -->
  <input type="text" name="gruppe" id="GruppeHidden">

<script>
(function(){
  // Array von Objekten {id:..., name:...}
  let Gruppen = [];
  const maxGroups = 2;

  function isSonstigeSelected() {
    return Gruppen.length === 1 && Gruppen[0].name.toLowerCase() === 'sonstige';
  }

  function updateGruppeList() {
    const list = document.getElementById('GruppeList');
    list.innerHTML = '';
    Gruppen.forEach((g, idx) => {
      const li = document.createElement('li');
      li.innerHTML = `${g.name} <button type="button" onclick="removeGruppe(${idx})">Entfernen</button>`;
      list.appendChild(li);
    });
    // Hidden mit IDs f√ºllen (IDs durch / getrennt)
    document.getElementById('GruppeHidden').value = Gruppen.map(g => g.id).join('/');
    document.getElementById('GruppeHint').style.display = Gruppen.length ? 'none' : 'block';

    // Sonstige-Feld anzeigen/verstecken
    if (isSonstigeSelected()) {
      document.getElementById('GruppeSelect').disabled = true;
      document.getElementById('addGruppe').disabled = true;
      document.getElementById('gruppe-sonstige-row').style.display = 'flex';
    } else {
      document.getElementById('GruppeSelect').disabled = false;
      document.getElementById('addGruppe').disabled = false;
      document.getElementById('gruppe-sonstige-row').style.display = 'none';
      document.getElementById('gruppe_sonstige').value = '';
    }
  }

  document.getElementById('addGruppe').addEventListener('click', function() {
    const sel = document.getElementById('GruppeSelect');
    const val = sel.value;
    if (!val) return;
    const name = sel.options[sel.selectedIndex].text.trim();
    const id = val;
    if (Gruppen.some(g => g.id == id)) {
      alert("Diese Gruppe wurde bereits hinzugef√ºgt.");
      return;
    }
    if (Gruppen.length >= maxGroups) {
      alert("Es k√∂nnen maximal " + maxGroups + " Gruppen ausgew√§hlt werden.");
      return;
    }
    // Sonstige (Name) behandeln: wenn Name == 'sonstige' nur diese zulassen
    if (name.toLowerCase() === 'sonstige') {
      Gruppen = [{id: id, name: name}];
      updateGruppeList();
      return;
    }
    if (Gruppen.length === 1 && Gruppen[0].name.toLowerCase() === 'sonstige') {
      alert("Wenn 'sonstige' gew√§hlt wurde, kann keine weitere Gruppe hinzugef√ºgt werden.");
      return;
    }
    Gruppen.push({id: id, name: name});
    updateGruppeList();
  });

  document.getElementById('clearGruppe').addEventListener('click', function() {
    Gruppen = [];
    updateGruppeList();
  });

  // removeGruppe als global verf√ºgbar machen (wird in onclick verwendet)
  window.removeGruppe = function(idx) {
    Gruppen.splice(idx, 1);
    updateGruppeList();
  };

  // initial: wenn du bereits IDs/Namen serverseitig vorbef√ºllst, hier parsen und setzen
  updateGruppeList();
})();
</script>


  <div class="form-row">
    <label for="Trainer">Trainer/innen:</label>
    <select id="TrainerSelect">
      <option value="">Bitte w√§hlen</option>
      <?php
      // sichere Tabellennamen
      $safe_trtable = preg_replace('/[^A-Za-z0-9_]/', '', $trtable);

      // Gruppenauswahl aus REQUEST (POST oder GET) parsen, Format "3/5"
      $group_param = $_REQUEST['gruppe'] ?? '';
      $selected_group_ids = [];
      if ($group_param !== '') {
          $parts = preg_split('#[/,]#', $group_param);
          foreach ($parts as $p) {
              $p = trim($p);
              if ($p === '') continue;
              $id = (int)$p;
              if ($id > 0) $selected_group_ids[] = $id;
          }
          $selected_group_ids = array_values(array_unique($selected_group_ids));
      }

      $seen = [];

      if (count($selected_group_ids) > 0) {
          $in = implode(',', array_map('intval', $selected_group_ids));

          // 1) Trainer in den ausgew√§hlten Gruppen (uniq nach Name), sortiert
          $q1 = "SELECT DISTINCT trname FROM `{$safe_trtable}` WHERE gruppe_id IN ({$in}) ORDER BY trname ASC";
          $res1 = mysqli_query($conn, $q1);
          if ($res1) {
              while ($r = mysqli_fetch_assoc($res1)) {
                  $name = trim($r['trname'] ?? '');
                  if ($name === '' || isset($seen[$name])) continue;
                  $seen[$name] = true;
                  $t = htmlspecialchars($name, ENT_QUOTES, 'UTF-8');
                  echo "<option value=\"$t\">$t</option>";
              }
          } else {
              echo "<!-- TRAINER Q1 ERROR: " . htmlspecialchars(mysqli_error($conn), ENT_QUOTES, 'UTF-8') . " -->";
          }

          // 2) Trainer, die in keiner der ausgew√§hlten Gruppen sind
          $q2 = "SELECT DISTINCT trname FROM `{$safe_trtable}` WHERE gruppe_id NOT IN ({$in}) ORDER BY trname ASC";
          $res2 = mysqli_query($conn, $q2);
          if ($res2) {
              while ($r = mysqli_fetch_assoc($res2)) {
                  $name = trim($r['trname'] ?? '');
                  if ($name === '' || isset($seen[$name])) continue;
                  $seen[$name] = true;
                  $t = htmlspecialchars($name, ENT_QUOTES, 'UTF-8');
                  echo "<option value=\"$t\">$t</option>";
              }
          } else {
              echo "<!-- TRAINER Q2 ERROR: " . htmlspecialchars(mysqli_error($conn), ENT_QUOTES, 'UTF-8') . " -->";
          }
      } else {
          // Keine Gruppen gew√§hlt: alle Trainer alphabetisch, uniq
          $q = "SELECT DISTINCT trname FROM `{$safe_trtable}` ORDER BY trname ASC";
          $res = mysqli_query($conn, $q);
          if ($res) {
              while ($r = mysqli_fetch_assoc($res)) {
                  $name = trim($r['trname'] ?? '');
                  if ($name === '' || isset($seen[$name])) continue;
                  $seen[$name] = true;
                  $t = htmlspecialchars($name, ENT_QUOTES, 'UTF-8');
                  echo "<option value=\"$t\">$t</option>";
              }
          } else {
              echo "<option value=''>Fehler beim Laden der Trainer</option>";
              echo "<!-- TRAINER Q ERROR: " . htmlspecialchars(mysqli_error($conn), ENT_QUOTES, 'UTF-8') . " -->";
          }
      }
      ?>
    </select>
    <button type="button" id="addTrainer">‚ûï Hinzuf√ºgen</button>
    <button type="button" id="clearTrainer">üóëÔ∏è Leeren</button>
    <span class="required-star">*</span>
    <span class="smal-txt">&nbsp;&nbsp;&nbsp; max. 2 Trainer</span>
  </div>
  <ul class="multi-group-list" id="TrainerList"></ul>
  <div id="TrainerHint" style="margin-left:100px; color:#888; font-size:0.95em;">Bitte mindestens einer Trainer ausw√§hlen und auf ‚ûï Hinzuf√ºgen klicken.</div>
  <input type="hidden" name="trainer" id="TrainerHidden">
  
  <script>
  // Trainer-UI (DOM-ready)
  (function(){
    let Trainer = [];
    const maxTr = 2;

    function isTrainerSonstigeSelected() {
      return Trainer.length === 1 && Trainer[0].toLowerCase() === 'sonstige';
    }

    function updateTrainerList() {
      const list = document.getElementById('TrainerList');
      list.innerHTML = "";
      Trainer.forEach((t, idx) => {
        const li = document.createElement('li');
        li.innerHTML = `${t} <button type="button" onclick="removeTrainer(${idx})">Entfernen</button>`;
        list.appendChild(li);
      });
      document.getElementById('TrainerHidden').value = Trainer.join('/');
      document.getElementById('TrainerHint').style.display = Trainer.length ? 'none' : 'block';
      // "sonstige" Verhalten (falls relevant)
      const sel = document.getElementById('TrainerSelect');
      const addBtn = document.getElementById('addTrainer');
      if (isTrainerSonstigeSelected()) {
        sel.disabled = true;
        addBtn.disabled = true;
      } else {
        sel.disabled = false;
        addBtn.disabled = false;
      }
    }

    document.getElementById('addTrainer').addEventListener('click', function() {
      const sel = document.getElementById('TrainerSelect');
      const value = sel.value;
      if (!value) return alert('Bitte einen Trainer ausw√§hlen.');
      if (Trainer.includes(value)) return alert('Trainer bereits hinzugef√ºgt.');
      if (Trainer.length >= maxTr) return alert('Maximal ' + maxTr + ' Trainer m√∂glich.');
      if (value.toLowerCase() === 'sonstige') { Trainer = ['sonstige']; updateTrainerList(); return; }
      if (Trainer.length === 1 && Trainer[0].toLowerCase() === 'sonstige') return alert('Keine weiteren m√∂glich.');
      Trainer.push(value);
      updateTrainerList();
    });

    document.getElementById('clearTrainer').addEventListener('click', function() {
      Trainer = [];
      updateTrainerList();
    });

    window.removeTrainer = function(idx) {
      Trainer.splice(idx, 1);
      updateTrainerList();
    };

    // initial
    updateTrainerList();
  })();
  </script>

<!-- 
  <div class="form-row">
    <label for="leiter">Leiter: </label>
    <input type="text" name="leiter" id="leiter" required>
    <span class="required-star">*</span>
  </div>
  <div class="form-row">
    <label for="vermerk">Vermerk:</label>
    <input type="text" name="vermerk" id="vermerk">
  </div>
-->
  <div class="form-row">
    <label for="bemerkung">Bemerkung:</label>
    <textarea name="bemerkung" id="bemerkung"></textarea>
  </div>
  <button type="submit">Eintragen</button>
</form>

<?php 
    include 'includes/list_last_entries.php';
    require_once 'includes/footer.php'; 
?>
